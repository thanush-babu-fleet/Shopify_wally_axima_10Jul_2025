{% assign menu_type = section.settings.menu_open_type | default: 'hover' %}

{% style %}
.custom-collection-grid-section {
  .custom-collection-card .theme.dark {
    background-color: black;
    p {
      color: white;
    }
  }
  .custom-collection-card .theme.light {
    background-color: white;
    p {
      color: black;
    }
  }
  .slick-next {
      right: 24px;
    }
    .slick-track{
      display:flex;
      left: -6px;
      align-items:stretch;
      
      .slick-slide{
          height: auto;
      }
      .slick-slide >div:first-child{
        height:100%;
        .column{
          height:100% !important;
        }
      }
    }
}
{% endstyle %}

<div class="hidden md:flex gap-6">
{% for link in linklist %}
  {% if link.links != blank %}
    <div class="megamenu flex items-center {% if menu_type == 'hover' %}group{% endif %}">
      <div class="main-menu flex items-center gap-1 cursor-pointer pl-2 {% if menu_type == 'click' %}dropdown-toggle{% endif %}">
        {% if menu_type == 'click' %}
          {{ link.title }}
        {% else %}
          <a href="{{ link.url }}" aria-label="{{ link.title }}">{{ link.title }}</a>
        {% endif %}
        <span class="svg-wrapper up-arrow hidden px-1.5 py-2 {% if menu_type == 'hover' %}group-hover:inline{% endif %}">
          {{- 'up_arrow.svg' | inline_asset_content -}}
        </span>
        <span class="svg-wrapper down-arrow px-1.5 py-2 {% if menu_type == 'hover' %}group-hover:hidden{% endif %}">
          {{- 'down_arrow.svg' | inline_asset_content -}}
        </span>
      </div>

      <div
        class="megamenu-backdrop fixed inset-0 bg-black bg-opacity-50 z-10 transition-opacity duration-300 pointer-events-none
          {% if menu_type == 'hover' %}
            opacity-0 invisible group-hover:opacity-100 group-hover:visible
          {% else %}
            hidden
          {% endif %}"
        style="top:10rem; left:0;">
      </div>

      <div class="menu-content absolute left-0 bg-white w-full py-10 px-16 dropdown-menu z-10
        {% if menu_type == 'hover' %}
          opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300
        {% else %}
          hidden
        {% endif %}
      " style="top: calc(100% + 1px)">
        {%- liquid
          if link.links.size == 1
            assign megamenu_grid = 'sm:grid-cols-3'
          elsif link.links.size == 2
            assign megamenu_grid = 'sm:grid-cols-4'
          elsif link.links.size == 3
            assign megamenu_grid = 'sm:grid-cols-5'
          else
            assign megamenu_grid = 'sm:grid-cols-1'
          endif
        -%}
        <div class="grid grid-cols-1 {{ megamenu_grid }} gap-4">
          {% for sub_link in link.links %}
            <div>
              <a href="{{ sub_link.url }}" class="subheading" style="font-family: var(--heading-font)" aria-label="{{ sub_link.title }}">
                {{ sub_link.title }}
              </a>
              {% if sub_link.links != blank %}
                <ul class="mt-6 flex flex-col gap-3">
                  {% for sub_sub_link in sub_link.links %}
                    <li>
                      <a class="font-medium" href="{{ sub_sub_link.url }}" aria-label="{{ sub_sub_link.title }}">
                        {{ sub_sub_link.title }}
                      </a>
                    </li>
                  {% endfor %}
                </ul>
              {% endif %}
            </div>
          {% endfor %}

          {% for block in section.blocks %}
            {% if block.type == "featured_block" %}
              <div class="relative bg-gray-100 col-span-2 overflow-hidden" {{ block.shopify_attributes }}>
                {% if block.settings.featured_block_img != blank %}
                  <div class="absolute top-0 w-full h-full">
                    {% assign featured_block_img_alt = block.settings.featured_block_img.alt | default: shop.name | escape %}
                    {{ block.settings.featured_block_img | image_url: width: 600 | image_tag:
                      class: 'w-full h-full object-cover',
                      alt: featured_block_img_alt,
                      preload: true
                    }}
                  </div>
                {% endif %}
                <div class="content relative p-8 pt-11 pb-7" style="background: rgba(32, 0, 126, 0.4);">
                  <div class="md:w-1/2">
                    {% if block.settings.featured_block_headline != blank %}
                      <p class="text-xs bg-primary text-secondary tracking-widest font-medium !leading-normal px-2.5 py-1 w-max mb-2" style="font-family: var(--heading-font)">
                        {{ block.settings.featured_block_headline }}
                      </p>
                    {% endif %}
                    {% if block.settings.featured_block_content != blank %}
                      <p class="text-3xl text-secondary !leading-tight mb-4 font-bold" style="font-family: var(--heading-font)">
                        {{ block.settings.featured_block_content }}
                      </p>
                    {% endif %}
                    {% if block.settings.featured_block_button-label != blank and block.settings.featured_block_url != blank %}
                       <a href="{{ block.settings.featured_block_url }}" role="button" class="py-3 px-6 bg-white font-semibold" aria-label="{{ block.settings.featured_block_button-label }}">
                         {{ block.settings.featured_block_button-label }}
                       </a>              
                    {% endif %}
                  </div>
                </div>
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>
  {% else %}
    <a href="{{ link.url }}" class="main-menu flex items-center px-2" aria-label="{{ link.title }}">{{ link.title }}</a>
  {% endif %}
{% endfor %}
</div>

<script>
document.addEventListener("DOMContentLoaded", function () {
  console.log("LinkList:", "{{ linklist[0] }}");
  const menuType = '{{ menu_type }}';
  
  if (menuType === 'click') {
    // Click-based menu logic
    const menuToggles = document.querySelectorAll(".main-menu.dropdown-toggle");

    menuToggles.forEach(toggle => {
      toggle.addEventListener("click", function (e) {
        e.preventDefault();
        const megamenu = this.closest(".megamenu");
        const menuContent = megamenu.querySelector(".menu-content");
        const bgopacity = megamenu.querySelector(".megamenu-backdrop");
        const upArrow = this.querySelector(".up-arrow");
        const downArrow = this.querySelector(".down-arrow");

        // Close all other menus
        document.querySelectorAll(".megamenu").forEach(menu => {
          const content = menu.querySelector(".menu-content");
          const backdrop = menu.querySelector(".megamenu-backdrop");
          const toggleBtn = menu.querySelector(".main-menu.dropdown-toggle");
          const up = toggleBtn.querySelector(".up-arrow");
          const down = toggleBtn.querySelector(".down-arrow");

          if (content !== menuContent) {
            content.classList.add("hidden");
            backdrop.classList.add("hidden");
            toggleBtn.classList.remove("active");
            up.classList.add("hidden");
            down.classList.remove("hidden");
          }
        });

        // Toggle current menu
        this.classList.toggle("active");
        menuContent.classList.toggle("hidden");
        upArrow.classList.toggle("hidden");
        downArrow.classList.toggle("hidden");

        if (menuContent.classList.contains("hidden")) {
          bgopacity.classList.add("hidden");
        } else {
          bgopacity.classList.remove("hidden");
        }
      });
    });

    // Close menu when clicking outside
    document.addEventListener("click", function (e) {
      const isInsideMenu = e.target.closest(".megamenu");
      if (!isInsideMenu) {
        document.querySelectorAll(".megamenu").forEach(menu => {
          const content = menu.querySelector(".menu-content");
          const backdrop = menu.querySelector(".megamenu-backdrop");
          const toggleBtn = menu.querySelector(".main-menu.dropdown-toggle");
          const up = toggleBtn.querySelector(".up-arrow");
          const down = toggleBtn.querySelector(".down-arrow");

          content.classList.add("hidden");
          backdrop.classList.add("hidden");
          toggleBtn.classList.remove("active");
          up.classList.add("hidden");
          down.classList.remove("hidden");
        });
      }
    });
  } else {
    // Hover-based menu logic
    const megamenus = document.querySelectorAll(".megamenu");
    
    megamenus.forEach(megamenu => {
      const menuContent = megamenu.querySelector(".menu-content");
      const backdrop = megamenu.querySelector(".megamenu-backdrop");
      
      // Close menu when mouse leaves the megamenu area
      megamenu.addEventListener("mouseleave", function() {
        // Force hide the menu by removing all hover classes and setting styles directly
        menuContent.style.opacity = "0";
        menuContent.style.visibility = "hidden";
        backdrop.style.opacity = "0";
        backdrop.style.visibility = "hidden";
      });
      
      // Ensure menu opens when mouse enters
      megamenu.addEventListener("mouseenter", function() {
        // Force show the menu by setting styles directly
        menuContent.style.opacity = "1";
        menuContent.style.visibility = "visible";
        backdrop.style.opacity = "1";
        backdrop.style.visibility = "visible";
      });
      
      // Close menu when mouse leaves the menu content area specifically
      menuContent.addEventListener("mouseleave", function() {
        // Force hide the menu when leaving the content area
        menuContent.style.opacity = "0";
        menuContent.style.visibility = "hidden";
        backdrop.style.opacity = "0";
        backdrop.style.visibility = "hidden";
      });
      
      // Ensure menu stays open when mouse enters the content area
      menuContent.addEventListener("mouseenter", function() {
        // Keep menu visible when entering the content area
        menuContent.style.opacity = "1";
        menuContent.style.visibility = "visible";
        backdrop.style.opacity = "1";
        backdrop.style.visibility = "visible";
      });
    });
    
    // Close all menus when clicking outside
    document.addEventListener("click", function (e) {
      const isInsideMenu = e.target.closest(".megamenu");
      if (!isInsideMenu) {
        document.querySelectorAll(".megamenu").forEach(menu => {
          const content = menu.querySelector(".menu-content");
          const backdrop = menu.querySelector(".megamenu-backdrop");
          
          // Force hide the menu by setting styles directly
          content.style.opacity = "0";
          content.style.visibility = "hidden";
          backdrop.style.opacity = "0";
          backdrop.style.visibility = "hidden";
        });
      }
    });
    
    // Close menu when pressing Escape key
    document.addEventListener("keydown", function (e) {
      if (e.key === "Escape") {
        document.querySelectorAll(".megamenu").forEach(menu => {
          const content = menu.querySelector(".menu-content");
          const backdrop = menu.querySelector(".megamenu-backdrop");
          
          // Force hide the menu by setting styles directly
          content.style.opacity = "0";
          content.style.visibility = "hidden";
          backdrop.style.opacity = "0";
          backdrop.style.visibility = "hidden";
        });
      }
    });
  }
});
</script>

{% if section.settings.display_type == 'slider' %}
<script>
  function initCollectionSlider_{{ section.id | replace: '-', '_' }}() {
    var $slider = $('.collection-slider-grid-{{ section.id }}');
    if ($slider.hasClass('slick-initialized')) {
      $slider.slick('unslick');
    }
    $slider.slick({
      slidesToShow: {{ section.settings.columns_desktop }},
      slidesToScroll: 1,
      autoplay: {{ section.settings.rotate_slides }},
      arrows: {{ section.settings.show_arrows }},
      dots: {{ section.settings.show_dots }},
      centerMode: false,
      prevArrow: false,
      nextArrow: '<button type="button" class="slick-next custom-next button icon-btn" aria-label="Next slide"><svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x="0.5" y="0.5" width="39" height="39" rx="19.5" fill="white"/><rect x="0.5" y="0.5" width="39" height="39" rx="19.5" stroke="#273025"/><path d="M20.4434 13.8798C20.7167 13.6065 21.1602 13.6065 21.4336 13.8798L27.0586 19.5048L27.1484 19.6142C27.1654 19.6399 27.1772 19.6681 27.1904 19.6953C27.1962 19.7072 27.2039 19.7182 27.209 19.7304C27.2174 19.7507 27.2221 19.7721 27.2285 19.7929C27.2489 19.8586 27.2637 19.9276 27.2637 19.9999C27.2637 20.0589 27.252 20.1152 27.2383 20.1699C27.2304 20.2013 27.2242 20.2333 27.2119 20.2636C27.2112 20.2654 27.2097 20.2668 27.209 20.2685C27.2063 20.275 27.2021 20.2807 27.1992 20.2871C27.1833 20.3223 27.1656 20.3569 27.1436 20.3896C27.1182 20.4272 27.0905 20.4631 27.0586 20.4951L21.4336 26.1201C21.1603 26.3934 20.7167 26.3932 20.4434 26.1201C20.17 25.8467 20.17 25.4032 20.4434 25.1298L24.873 20.7001H13.4385C13.0519 20.7001 12.7384 20.3865 12.7383 19.9999C12.7383 19.6133 13.0519 19.2998 13.4385 19.2998H24.873L20.4434 14.8701C20.17 14.5967 20.17 14.1532 20.4434 13.8798Z" fill="#273025"/></svg></button>',
      infinite: true,
      responsive: [
        {
          breakpoint: 768,
          settings: {
            slidesToShow: 2,
            swipe: {{ section.settings.swipe_mobile }}
          }
        },
        {
          breakpoint: 480,
          settings: {
            slidesToShow: 1,
            swipe: {{ section.settings.swipe_mobile }},
            centerMode: true,
            centerPadding: '10% 0 0',
            infinite: true,
          }
        }
      ]
    });
  }
  document.addEventListener('DOMContentLoaded', function () {
    initCollectionSlider_{{ section.id | replace: '-', '_' }}();
  });
  document.addEventListener('shopify:section:load', function (event) {
    if (event.detail.sectionId === '{{ section.id }}') {
      initCollectionSlider_{{ section.id | replace: '-', '_' }}();
    }
  });
  document.addEventListener('shopify:section:select', function (event) {
    if (event.detail.sectionId === '{{ section.id }}') {
      initCollectionSlider_{{ section.id | replace: '-', '_' }}();
    }
  });
    document.addEventListener("DOMContentLoaded", function () {
    {% if settings.layout_style == 'detached' %}
      const slickList = document.querySelector('.collection-slider-grid-{{ section.id }} .slick-list');
      if (slickList) {
        const wrapperDiv = document.createElement('div');
        wrapperDiv.classList.add('container', 'px-4', 'mx-auto');

        slickList.parentNode.insertBefore(wrapperDiv, slickList);
        wrapperDiv.appendChild(slickList);
      }
    {% endif %}
  });
</script>
{% endif %}